{
   "openapi":"3.0.0",
   "servers":[

   ],
   "info":{
      "title":"Data Hub",
      "description":"REST API for the OIH Data Hub Service.",
      "version":"1.0.0",
      "license":{
         "name":"Apache 2.0",
         "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
      }
   },
   "tags":[
      {
         "name":"data",
         "description":"Data related calls"
      }
   ],
   "paths":{
      "/data":{
         "post":{
            "tags":[
               "data"
            ],
            "summary":"Post a new data object.",
            "description":"Post a new data object.",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/Data"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "$ref":"#/components/schemas/MutableData"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "get":{
            "tags":[
               "data"
            ],
            "summary":"Retrieve data.",
            "description":"Retrieve data.",
            "parameters":[
               {
                  "name":"page[size]",
                  "description":"The amount of records per page returned. Defaults to 50.",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "name":"page[number]",
                  "description":"The number of the page to be returned. Defaults to 1.",
                  "in":"query",
                  "schema":{
                     "type":"integer"
                  }
               },
               {
                  "in":"query",
                  "name":"created_since",
                  "description":"Used to retrieve data records that we created since given timestamp",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"updated_since",
                  "description":"Used to retrieve data records that we updated since given timestamp",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"domain_id",
                  "description":"Used to retrieve data records that have specific domainId",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"schema_uri",
                  "description":"Used to retrieve data records that have specific schemaUri",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"tenant",
                  "description":"Used to retrieve data records that have specific Tenant ID. Requires \"all\" or \"tenant.all\" permission.",
                  "schema":{
                     "type":"string"
                  }
               },
               {
                  "in":"query",
                  "name":"min_score",
                  "description":"Used to retrieve only data records with a score of at least the one provided",
                  "schema":{
                     "type":"number"
                  }
               },
               {
                  "in":"query",
                  "name":"has_duplicates",
                  "description":"Used to retrieve only data records with known duplicates",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "in":"query",
                  "name":"has_subsets",
                  "description":"Used to retrieve only data records with known subsets",
                  "schema":{
                     "type":"boolean"
                  }
               },
               {
                  "in":"query",
                  "name":"is_unique",
                  "description":"Used to retrieve only data records with no known subsets nor duplictates",
                  "schema":{
                     "type":"boolean"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "type":"array",
                                 "items":{
                                    "$ref":"#/components/schemas/MutableData"
                                 }
                              },
                              "meta":{
                                 "$ref":"#/components/schemas/Meta"
                              }
                           }
                        }
                     }
                  }
               },
               "403":{
                  "description":"Required permissions missing."
               }
            }
         }
      },
      "/data/{id}":{
         "get":{
            "tags":[
               "data"
            ],
            "summary":"Retrieve a data object with given ID.",
            "description":"Retrieve a data object with given ID.",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "$ref":"#/components/schemas/MutableData"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "data"
            ],
            "summary":"Replace the data object with given ID.",
            "description":"Replace the data object with given ID.",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/Data"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "$ref":"#/components/schemas/MutableData"
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "patch":{
            "tags":[
               "data"
            ],
            "summary":"Update the data object with given ID.",
            "description":"Update the data object with given ID.",
            "parameters":[
               {
                  "in":"path",
                  "name":"id",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/Data"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "$ref":"#/components/schemas/MutableData"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      },
      "/data/import":{
         "post":{
            "tags":[
               "data"
            ],
            "summary":"Import an array of data objects.",
            "description":"Import an array of data objects.",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/DataArray"
                     }
                  }
               }
            },
            "responses":{
               "201":{
                  "description":"Records created"
               }
            }
         }
      },
      "/data/status":{
         "get":{
            "tags":[
               "data"
            ],
            "summary":"Get status of data records by tenant.",
            "description":"Get status of data records by tenant. Requires \"all\" or \"tenant.all\" permission.",
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "$ref":"#/components/schemas/StatusData"
                              }
                           }
                        }
                     }
                  }
               },
               "403":{
                  "description":"Required permissions missing."
               }
            }
         }
      },
      "/data/enrich":{
         "post":{
            "tags":[
               "data"
            ],
            "summary":"Start the data enrichment process.",
            "description":"Will analyze stored data objects and apply enrichment functions to them based on provided configuration.",
            "requestBody":{
               "content":{
                  "application/json":{
                     "schema":{
                        "$ref":"#/components/schemas/EnrichmentFunctions"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"Enrichment started, will complete asynchronously"
               }
            }
         }
      },
      "/data/statistics":{
         "get":{
            "tags":[
               "data"
            ],
            "summary":"Fetch statistics about your data set.",
            "description": "Statistics are largely based on the results of the enrichment endpoint.",
            "responses":{
               "200":{
                  "description":"Enrichment started, will complete asynchronously",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"object",
                           "properties":{
                              "data":{
                                 "$ref":"#/components/schemas/Statistics"
                              }
                           }
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components":{
      "securitySchemes":{
         "bearerAuth":{
            "type":"http",
            "scheme":"bearer",
            "description":"Token issued by IAM"
         }
      },
      "schemas":{
         "DataArray":{
            "type":"array",
            "items":{
               "$ref":"#/components/schemas/Data"
            }
         },
         "Data":{
            "type":"object",
            "required":[
               "content"
            ],
            "properties":{
               "domainId":{
                  "type":"string",
                  "description":"Object domain ID"
               },
               "schemaUri":{
                  "type":"string",
                  "description":"Validation schema URI"
               },
               "content":{
                  "type":"object"
               },
               "tenant":{
                  "type":"string",
                  "description":"Tenant  ID"
               },
               "refs":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/AppDataRecord"
                  }
               },
               "owners":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Owner"
                  }
               }
            }
         },
         "Record":{
            "type":"object",
            "required":[
               "name",
               "createdAt",
               "updatedAt"
            ],
            "properties":{
               "id":{
                  "type":"string"
               },
               "createdAt":{
                  "type":"string",
                  "format":"date-time"
               },
               "updatedAt":{
                  "type":"string",
                  "format":"date-time"
               }
            }
         },
         "Statistics":{
            "type":"object",
            "properties":{
               "scores":{
                  "type":"object",
                  "example": {
                    "3": 1,
                    "7": 5,
                    "15": 3
                  }
               },
               "duplicateCount": {
                 "type": "number",
                 "example": 2
               },
               "subsetCount": {
                 "type": "number",
                 "example": 1
               },
               "uniqueCount": {
                 "type": "number",
                 "example": 4
               }
            }
         },
         "AppDataRecord":{
            "type":"object",
            "properties":{
               "applicationUid":{
                  "type":"string"
               },
               "recordUid":{
                  "type":"string"
               },
               "modificationHistory":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ModificationHistory"
                  }
               }
            }
         },
         "ModificationHistory":{
            "type":"object",
            "properties":{
               "user":{
                  "type":"string"
               },
               "operation":{
                  "type":"string"
               },
               "timestamp":{
                  "type":"string",
                  "format":"date-time"
               }
            }
         },
         "MutableData":{
            "allOf":[
               {
                  "$ref":"#/components/schemas/Data"
               },
               {
                  "$ref":"#/components/schemas/Record"
               }
            ]
         },
         "StatusData":{
            "type":"object",
            "properties":{
               "totalRecords":{
                  "type":"integer"
               }
            }
         },
         "EnrichmentFunctions":{
            "type":"object",
            "required":[
               "functions"
            ],
            "properties":{
               "functions":{
                  "type":"array",
                  "items":{
                     "type":"object",
                     "properties":{
                        "name":{
                           "type":"string",
                           "example":"score"
                        },
                        "active":{
                           "type":"boolean",
                           "example":true
                        },
                        "fields":{
                           "type":"array",
                           "items":{
                              "type":"object",
                              "example":{
                                 "key":"firstName",
                                 "minLength":5,
                                 "weight":2
                              }
                           }
                        }
                     }
                  }
               }
            }
         },
         "Meta":{
            "type":"object",
            "properties":{
               "page":{
                  "type":"integer"
               },
               "perPage":{
                  "type":"integer"
               },
               "total":{
                  "type":"integer"
               },
               "totalPages":{
                  "type":"integer"
               }
            }
         },
         "Owner":{
            "type":"object",
            "required":[
               "id",
               "type"
            ],
            "properties":{
               "id":{
                  "type":"string",
                  "description":"External id of the owner",
                  "example":"123"
               },
               "type":{
                  "type":"string",
                  "description":"Type to discriminate owner's type",
                  "example":"user"
               }
            }
         }
      }
   },
   "security":[
      {
         "bearerAuth":[

         ]
      }
   ]
}
