version: '3.8'
services:
  iam:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_IAM_FOLDER}
    working_dir: /usr/src/app/services/iam
    environment:
      NODE_ENV: development
      LOG_LEVEL: info
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      IAM_MONGODB_CONNECTION: mongodb://mongodb/${DEV_IAM_DB}?replicaSet=rs0
      IAM_AUTH_TYPE: basic
      IAM_DEBUG: 'true'
      IAM_BASEURL: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}
      IAM_ORIGINWHITELIST: ${ORIGIN_WHITELIST}
      IAM_JWT_SECRET: secret
      IAM_SESSION_COOKIE_SECRET: secret
      IAM_JWT_COOKIENAME: oih_cookie
      IAM_JWT_AUDIENCE: oih-iam
      IAM_ACC_ADMIN_USERNAME: ${DEV_IAM_ADMIN_USERNAME}
      IAM_ACC_ADMIN_PASSWORD: ${DEV_IAM_ADMIN_PASSWORD}
      IAM_ACC_SERVICEACCOUNT_PASSWORD: 'secret'
      PORT: ${DEV_IAM_PORT}
    ports:
    - ${DEV_IAM_EXTERNAL_PORT}:${DEV_IAM_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  secret-service:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_SECRET_SERVICE_FOLDER}
    working_dir: /usr/src/app/services/secret-service
    environment:
      NODE_ENV: development
      LOG_LEVEL: info
      MONGODB_CONNECTION: mongodb://mongodb/${DEV_SECRET_SERVICE_DB}?replicaSet=rs0
      TTL_AUTHFLOW: 2m
      IAM_API_BASE: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      API_BASE: /api/v1
      DEBUG_MODE: 'true'
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      ORIGINWHITELIST: ${ORIGIN_WHITELIST}
      PORT: ${DEV_SECRET_SERVICE_PORT}
    ports:
    - ${DEV_SECRET_SERVICE_EXTERNAL_PORT}:${DEV_SECRET_SERVICE_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  component-repository:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_COMPONENT_REPOSITORY_FOLDER}
    working_dir: /usr/src/app/services/component-repository
    environment:
      NODE_ENV: development
      LOG_LEVEL: info
      MONGODB_URI: mongodb://mongodb/${DEV_COMPONENT_REPOSITORY_DB}?replicaSet=rs0
      IAM_API_BASE: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      CORS_ORIGIN_WHITELIST: ${ORIGIN_WHITELIST}
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      PORT: ${DEV_COMPONENT_REPOSITORY_PORT}
    ports:
    - ${DEV_COMPONENT_REPOSITORY_EXTERNAL_PORT}:${DEV_COMPONENT_REPOSITORY_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  snapshots-service:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_SNAPSHOTS_SERVICE_FOLDER}
    working_dir: /usr/src/app/services/snapshots-service
    environment:
      NODE_ENV: development
      LOG_LEVEL: info
      MONGODB_URI: mongodb://mongodb/${DEV_SNAPSHOTS_SERVICE_DB}?replicaSet=rs0
      IAM_API_BASE: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      CORS_ORIGIN_WHITELIST: ${ORIGIN_WHITELIST}
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      PORT: ${DEV_SNAPSHOTS_SERVICE_PORT}
    ports:
    - ${DEV_SNAPSHOTS_SERVICE_EXTERNAL_PORT}:${DEV_SNAPSHOTS_SERVICE_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  component-orchestrator:
    image: ${NODE_IMAGE}
    # container_name: ${DEV_COMPONENT_ORCHESTRATOR_FOLDER}
    working_dir: /usr/src/app/services/component-orchestrator
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      NODE_ENV: development
      LOG_LEVEL: trace
      ORCHESTRATOR_TOKEN_SECRET: "my-secret"
      MONGODB_URI: mongodb://mongodb/${DEV_COMPONENT_ORCHESTRATOR_DB}?replicaSet=rs0
      IAM_BASE_URL: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      COMPONENT_REPOSITORY_BASE_URL: http://${DEV_COMPONENT_REPOSITORY_FOLDER}:${DEV_COMPONENT_REPOSITORY_PORT}

      ### kubernetes pod -> minikube host
      SECRETS_SERVICE_BASE_URL: http://${MINIKUBE_HOST_IP}:${DEV_SECRET_SERVICE_EXTERNAL_PORT}/api/v1
      SNAPSHOTS_SERVICE_BASE_URL: http://${MINIKUBE_HOST_IP}:${DEV_SNAPSHOTS_SERVICE_EXTERNAL_PORT}
      SELF_URL: http://${MINIKUBE_HOST_IP}:${DEV_COMPONENT_ORCHESTRATOR_EXTERNAL_PORT}
      SELF_API_URI: http://${MINIKUBE_HOST_IP}:${DEV_COMPONENT_ORCHESTRATOR_EXTERNAL_PORT}
      RABBITMQ_URI_FLOWS: amqp://${MINIKUBE_HOST_IP}:5672

      COMPONENT_LOG_LEVEL: trace
      ###

      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      RABBITMQ_MANAGEMENT_URI: http://guest:guest@rabbitmq:15672
      DEFAULT_CPU_LIMIT: 100m
      DEFAULT_MEM_LIMIT: 256Mi
      DEFAULT_CPU_REQUEST: 100m
      DEFAULT_MEM_REQUEST: 64Mi
      NAMESPACE: flows
      TICK_INTERVAL: 10000
      KUBE_CONFIG: ../../dev-tools/docker-compose/src/setup/.kube/config
      LISTEN_PORT: ${DEV_COMPONENT_ORCHESTRATOR_PORT}

      CACHE_COMPONENT_IGNORE: "false"

      ### mount hostpath - use this with caution see https://kubernetes.io/docs/concepts/storage/volumes/#hostpath
      KUBERNETES_VOLUME_HOSTPATH_ENABLED: ${KUBERNETES_VOLUME_HOSTPATH_ENABLED}
      KUBERNETES_VOLUME_HOSTPATH_PATH: ${KUBERNETES_VOLUME_HOSTPATH_PATH}
      KUBERNETES_VOLUME_HOSTPATH_MOUNTPATH: "/mnt-test"

    ports:
    - ${DEV_COMPONENT_ORCHESTRATOR_EXTERNAL_PORT}:${DEV_COMPONENT_ORCHESTRATOR_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  app-directory:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_APP_DIRECTORY_FOLDER}
    working_dir: /usr/src/app/services/app-directory
    environment:
      NODE_ENV: development
      LOG_LEVEL: info
      DEBUG_MODE: 'true'
      MONGODB_CONNECTION: mongodb://mongodb/${DEV_APP_DIRECTORY_DB}?replicaSet=rs0
      IAM_API_BASE: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      ORIGIN_WHITELIST: ${ORIGIN_WHITELIST}
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      API_BASE: /api/v1
      PORT: ${DEV_APP_DIRECTORY_PORT}
    ports:
    - ${DEV_APP_DIRECTORY_EXTERNAL_PORT}:${DEV_APP_DIRECTORY_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  attachment-storage-service:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_ATTACHMENT_STORAGE_SERVICE_FOLDER}
    working_dir: /usr/src/app/services/attachment-storage-service
    environment:
      NODE_ENV: development
      REDIS_CONFIG: '{"host": "redis", "keyPrefix": "attachments:", "sentinels": null}'
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      PORT: ${DEV_ATTACHMENT_STORAGE_SERVICE_PORT}
    ports:
    - ${DEV_ATTACHMENT_STORAGE_SERVICE_EXTERNAL_PORT}:${DEV_ATTACHMENT_STORAGE_SERVICE_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  audit-log:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_AUDIT_LOG_FOLDER}
    working_dir: /usr/src/app/services/audit-log
    environment:
      NODE_ENV: development
      MONGODB_URL: mongodb://mongodb/${DEV_AUDIT_LOG_DB}?replicaSet=rs0
      QUEUE_URL: amqp://guest:guest@rabbitmq
      EXCHANGE_NAME: audit-logs
      EXCHANGE_TOPIC: logs
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      PORT: ${DEV_AUDIT_LOG_PORT}
    ports:
    - ${DEV_AUDIT_LOG_EXTERNAL_PORT}:${DEV_AUDIT_LOG_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  data-hub:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_DATA_HUB_FOLDER}
    working_dir: /usr/src/app/services/data-hub
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb/${DEV_DATA_HUB_DB}?replicaSet=rs0
      LOG_LEVEL: trace
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      PORT: ${DEV_DATA_HUB_PORT}
    ports:
    - ${DEV_DATA_HUB_EXTERNAL_PORT}:${DEV_DATA_HUB_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  dispatcher-service:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_DISPATCHER_SERVICE_FOLDER}
    working_dir: /usr/src/app/services/dispatcher-service
    environment:
      NODE_ENV: development
      MONGODB_URL: mongodb://mongodb/${DEV_DISPATCHER_SERVICE_DB}?replicaSet=rs0
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      FLOW_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      QUEUE_URL: amqp://guest:guest@rabbitmq
      FLOWREPO_URL: http://localhost:${DEV_FLOW_REPOSITORY_EXTERNAL_PORT}
      SDF_ID: ReplaceMe
      PORT: ${DEV_DISPATCHER_SERVICE_PORT}
    ports:
    - ${DEV_DISPATCHER_SERVICE_EXTERNAL_PORT}:${DEV_DISPATCHER_SERVICE_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  flow-repository:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_FLOW_REPOSITORY_FOLDER}
    working_dir: /usr/src/app/services/flow-repository
    environment:
      NODE_ENV: development
      MONGODB_URL: mongodb://mongodb/${DEV_FLOW_REPOSITORY_DB}?replicaSet=rs0
      LOG_LEVEL: trace
      QUEUE_URL: amqp://guest:guest@rabbitmq
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      PORT: ${DEV_FLOW_REPOSITORY_PORT}
      ORIGINWHITELIST: ${ORIGIN_WHITELIST}
    ports:
    - ${DEV_FLOW_REPOSITORY_EXTERNAL_PORT}:${DEV_FLOW_REPOSITORY_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  ils:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_ILS_FOLDER}
    working_dir: /usr/src/app/services/ils
    environment:
      NODE_ENV: development
      MONGODB_URL: mongodb://mongodb/${DEV_ILS_DB}?replicaSet=rs0
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      PORT: ${DEV_ILS_PORT}
    ports:
    - ${DEV_ILS_EXTERNAL_PORT}:${DEV_ILS_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  meta-data-repository:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_META_DATA_REPOSITORY_FOLDER}
    working_dir: /usr/src/app/services/meta-data-repository
    environment:
      NODE_ENV: development
      LOG_LEVEL: info
      DEBUG_MODE: 'true'
      API_BASE: /api/v1
      MONGODB_CONNECTION: mongodb://mongodb/${DEV_META_DATA_REPOSITORY_DB}?replicaSet=rs0
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      ORIGINWHITELIST: ${ORIGIN_WHITELIST}
      PORT: ${DEV_META_DATA_REPOSITORY_PORT}
    ports:
    - ${DEV_META_DATA_REPOSITORY_EXTERNAL_PORT}:${DEV_META_DATA_REPOSITORY_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  scheduler:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_SCHEDULER_FOLDER}
    working_dir: /usr/src/app/services/scheduler
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb/${DEV_SCHEDULER_DB}?replicaSet=rs0
      LOG_LEVEL: trace
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      PORT: ${DEV_SCHEDULER_PORT}
    ports:
    - ${DEV_SCHEDULER_EXTERNAL_PORT}:${DEV_SCHEDULER_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
  webhooks:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_WEBHOOKS_FOLDER}
    working_dir: /usr/src/app/services/webhooks
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://mongodb/${DEV_WEBHOOKS_DB}?replicaSet=rs0
      LOG_LEVEL: trace
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      CORS_ORIGIN_WHITELIST: ${ORIGIN_WHITELIST}
      LISTEN_PORT: ${DEV_WEBHOOKS_PORT}
    ports:
    - ${DEV_WEBHOOKS_EXTERNAL_PORT}:${DEV_WEBHOOKS_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev

  template-repository:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_TEMPLATE_REPOSITORY_FOLDER}
    working_dir: /usr/src/app/services/${DEV_TEMPLATE_REPOSITORY_FOLDER}
    environment:
      NODE_ENV: development
      MONGODB_URL: mongodb://mongodb/${DEV_TEMPLATE_REPOSITORY_DB}?replicaSet=rs0
      LOG_LEVEL: trace
      QUEUE_URL: amqp://guest:guest@rabbitmq
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      LISTEN_PORT: ${DEV_TEMPLATE_REPOSITORY_PORT}
    ports:
    - ${DEV_TEMPLATE_REPOSITORY_EXTERNAL_PORT}:${DEV_TEMPLATE_REPOSITORY_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev

  rds:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_RDS_FOLDER}
    working_dir: /usr/src/app/services/${DEV_RDS_FOLDER}
    environment:
      NODE_ENV: development
      MONGODB_URL: mongodb://mongodb/${DEV_RDS_DB}?replicaSet=rs0
      LOG_LEVEL: trace
      QUEUE_URL: amqp://guest:guest@rabbitmq
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      CORS_ORIGIN_WHITELIST: ${ORIGIN_WHITELIST}
      PORT: ${DEV_RDS_PORT}
    ports:
    - ${DEV_RDS_EXTERNAL_PORT}:${DEV_RDS_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev

  governance-service:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_GOVERNANCE_SERVICE_FOLDER}
    working_dir: /usr/src/app/services/${DEV_GOVERNANCE_SERVICE_FOLDER}
    environment:
      NODE_ENV: development
      MONGODB_URL: mongodb://mongodb/${DEV_GOVERNANCE_SERVICE_DB}?replicaSet=rs0
      LOG_LEVEL: trace
      QUEUE_URL: amqp://guest:guest@rabbitmq
      IAM_TOKEN: ${DEV_IAM_TOKEN}
      INTROSPECT_TYPE: basic
      INTROSPECT_ENDPOINT_BASIC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/api/v1/tokens/introspect
      INTROSPECT_ENDPOINT_OIDC: http://${DEV_IAM_FOLDER}:${DEV_IAM_PORT}/op/userinfo
      ORIGINWHITELIST: ${ORIGIN_WHITELIST}
      PORT: ${DEV_GOVERNANCE_SERVICE_PORT}
    ports:
    - ${DEV_GOVERNANCE_SERVICE_EXTERNAL_PORT}:${DEV_GOVERNANCE_SERVICE_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
    
  reports-analytics:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_REPORTS_ANALYTICS_FOLDER}
    working_dir: /usr/src/app/services/${DEV_REPORTS_ANALYTICS_FOLDER}
    environment:
      NODE_ENV: development
      MONGODB_CONNECTION: mongodb://mongodb/${DEV_REPORTS_ANALYTICS_DB}?replicaSet=rs0
      RABBITMQ_URI: amqp://guest:guest@rabbitmq
      INFLUX_HOST: influx_db
      INFLUXDB_DATABASE: statistics
      GRAFANA_URL: http://grafana_frontend:8888
      LOG_LEVEL: debug
      DEBUG_MODE: "true"
      PORT: ${DEV_REPORTS_ANALYTICS_PORT}
    ports:
    - ${DEV_REPORTS_ANALYTICS_EXTERNAL_PORT}:${DEV_REPORTS_ANALYTICS_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev

  web-ui:
    
    image: ${NODE_IMAGE}
    container_name: ${DEV_WEB_UI_FOLDER}
    working_dir: /usr/src/app/services/web-ui
    environment:
      NODE_ENV: development
      ENDPOINT_IAM: http://localhost:${DEV_IAM_EXTERNAL_PORT}
      ENDPOINT_FLOW: http://localhost:${DEV_FLOW_REPOSITORY_EXTERNAL_PORT}
      ENDPOINT_COMPONENT: http://localhost:${DEV_COMPONENT_REPOSITORY_EXTERNAL_PORT}
      ENDPOINT_SECRETS: http://localhost:${DEV_SECRET_SERVICE_EXTERNAL_PORT}/api/v1
      ENDPOINT_DISPATCHER: http://localhost:${DEV_DISPATCHER_SERVICE_EXTERNAL_PORT}
      ENDPOINT_METADATA: http://localhost:${DEV_META_DATA_REPOSITORY_EXTERNAL_PORT}/api/v1
      ENDPOINT_APP_DIRECTORY: http://localhost:${DEV_APP_DIRECTORY_EXTERNAL_PORT}/api/v1
      ENDPOINT_WEBHOOKS: http://localhost:${DEV_WEBHOOKS_EXTERNAL_PORT}
      PORT: ${DEV_WEB_UI_PORT}
    ports:
    - ${DEV_WEB_UI_EXTERNAL_PORT}:${DEV_WEB_UI_PORT}
    volumes:
    - type: bind
      source: ${HOST_REPOSITORY_ROOT}
      target: /usr/src/app
    command: npm run start:container
    networks:
    - oih-dev
networks:
  oih-dev:
    external:
      name: oih-dev
